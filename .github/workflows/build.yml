name: Build Java Project with Maven

on:
  push:
    tags:
      - 'v*'

env:
  TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Maven
        run: sudo apt-get install -y maven

      - name: Build with Maven
        run: |
          mvn clean package

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: a-lenda-de-silverhollow
          # path: target/a-lenda-de-silverhollow-1.0-SNAPSHOT.jar
          path: target/a-lenda-de-silverhollow*.jar

  verify-github-token:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check if GITHUB_TOKEN is set
        run: |
          if [ -z "GITHUB_TOKEN" ]; then
            echo "GITHUB_TOKEN is not set"
          else
            echo "GITHUB_TOKEN is set"
          fi

      - name: Print repository info
        run: |
          echo "Repository: ${{ github.repository }}"

      - name: Verify GITHUB_TOKEN
        run: |
          response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }})
          
          echo "Response: $response"

  release:
    runs-on: ubuntu-latest
    needs: [ build, verify-github-token ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: a-lenda-de-silverhollow

      - name: List downloaded files
        run: ls -la

      - name: Read README.md
        id: read_readme
        run: |
          README_CONTENT=$(cat release/README.MD)
          echo "README_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$README_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ env.README_CONTENT }}
          draft: false
          prerelease: false

      - name: Upload JAR file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/a-lenda-de-silverhollow-1.0-SNAPSHOT.jar
          # asset_path: a-lenda-de-silverhollow.jar
          asset_name: a-lenda-de-silverhollow.jar
          asset_content_type: application/java-archive
